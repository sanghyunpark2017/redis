
############################################
# REDIS 공식사이트 - 설치
############################################

#툴설치
yum install -y gcc-c++ wget 

#소스다운로드(2018년 7월 현재 stable 버전 4.0, https://redis.io/download)
mkdir -p /app/redis
cd /app/redis

wget http://download.redis.io/releases/redis-stable.tar.gz
tar -xvf redis-stable.tar.gz
cd redis-stable

make

#기본 설정파일 백업
cp redis.conf redis.conf.org

#설치 되었는지 확인(PASS 이 떄는 패러미터 설정오류 발생함)
#/app/redis/redis-stable/src/redis-server
#CTRL+c

#패러미터 조정
cat << EOF >> /etc/security/limits.conf
*          soft    nofile          65536
*          hard    nofile          65536
EOF

cat << EOF >> /etc/sysctl.conf
vm.overcommit_memory = 1
EOF

cat << EOF >>  /etc/rc.local
sysctl -w net.core.somaxconn=65535
echo never > /sys/kernel/mm/transparent_hugepage/enabled
EOF

chmod +x /etc/rc.d/rc.local

#재부팅하여 설정반영
shutdown -r now

#tcp backlog 확인
sysctl net.core.somaxconn



#재실행(이 떄는 패러미터 설정 오류 없음)
/app/redis/redis-stable/src/redis-server /app/redis/redis-stable/redis.conf
CTRL+c


############################################
# 설정(master 3대 모두)
############################################

#나중에 방화벽 살릴 것
systemctl stop firewalld
systemctl disable firewalld

################### redis-trib.rb 유틸리티 쓰기 위한 gem 설치 ###################


#Install RVM
gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
curl -L get.rvm.io | bash -s stable
touch /etc/profile.d/rvm.sh

#rvm 실행파일 위치 검색(PASS)
#find . -name rvm*

#최신 stable 버전 확인(2018년 7월 현재 stable 버전 2.5.1 )
#https://www.ruby-lang.org/en/downloads/

#다운로드&설치
/usr/local/rvm/bin/rvm install 2.5.1

#버전지정(에러발생)
#/usr/local/rvm/bin/rvm use 2.5.1 --default

#버전지정(OK)
/usr/local/rvm/bin/rvm list
/usr/local/rvm/bin/rvm alias create default ruby-2.5.1

#터미널을 종료하고 다시 로그인
exit


#버전확인
ruby --version

###############################################################################################


#gem으로 redis 설치 
#centos7은 ruby 버전이 2.2.2로 맞지 않는다고 나오니 위 설치 진행함
gem install redis


#여기서 스냅샷함
#여기서 데몬으로 변경할 것


#클러스터 설정용 config 파일생성
##각 MSTER서버의 IP주소에 맞게 BIND 주소 수정
#BIND 주소에 loopback IP는 반드시 제거할 것 (자동 조인 안됨)
mkdir -p /app/redis/redis-stable/src/cluster
cd /app/redis/redis-stable/src/cluster

cat << EOF > ./redis.conf
bind 10.10.64.41
port 7000
daemonize yes
loglevel verbose
logfile "/var/log/redis.log"
cluster-enabled yes
cluster-config-file nodes.conf
cluster-node-timeout 5000
appendonly yes
EOF
vi ./redis.conf




############################################
# 설정(master 1번만)
############################################


#master 1번에서 실행(최소 6개 노드 지정이 되어야 함)
cd /app/redis/redis-stable/src
./redis-trib.rb create --replicas 1 10.10.64.41:7000 10.10.64.42:7000 10.10.64.43:7000 10.10.64.44:7000 10.10.64.45:7000 10.10.64.46:7000

#참고 http://redisgate.kr/redis/cluster/redis-trib.php

#그럼 이제 각 호스트서버에 누구가 slave로 되었는지 나오게 됨
 



############################################
# 명령어
############################################

#redis 실행
/app/redis/redis-stable/src/redis-server /app/redis/redis-stable/src/cluster/redis.conf


#콘솔실행
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.41 -p 7000
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.42 -p 7000
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.43 -p 7000
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.44 -p 7000
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.45 -p 7000
/app/redis/redis-stable/src/redis-cli -c -h 10.10.64.46 -p 7000

#콘솔명령어
cluster info
cluster nodes
config get *
monitor


#Direct 콘솔명령어
/app/redis/redis-stable/src/redis-cli -h 10.10.64.41 -p 7000 cluster info
/app/redis/redis-stable/src/redis-cli -h 10.10.64.42 -p 7000 cluster info
...
/app/redis/redis-stable/src/redis-cli -h 10.10.64.41 -p 7000 cluster nodes
/app/redis/redis-stable/src/redis-cli -h 10.10.64.42 -p 7000 cluster nodes
...
/app/redis/redis-stable/src/redis-cli -h 10.10.64.41 -p 7000 monitor
/app/redis/redis-stable/src/redis-cli -h 10.10.64.42 -p 7000 monitor
...


#redis 종료
/app/redis/redis-stable/src/redis-cli -h 10.10.64.46 -p 7000
/app/redis/redis-stable/src/redis-cli -h 10.10.64.45 -p 7000
/app/redis/redis-stable/src/redis-cli -h 10.10.64.44 -p 7000
/app/redis/redis-stable/src/redis-cli -h 10.10.64.43 -p 7000
/app/redis/redis-stable/src/redis-cli -h 10.10.64.42 -p 7000
/app/redis/redis-stable/src/redis-cli -h 10.10.64.41 -p 7000



#클러스터정보조회

./redis-trib.rb info 10.10.64.41:7000
./redis-trib.rb info 10.10.64.42:7000
./redis-trib.rb info 10.10.64.43:7000
./redis-trib.rb info 10.10.64.44:7000
./redis-trib.rb info 10.10.64.45:7000
./redis-trib.rb info 10.10.64.46:7000


#클러스터 체크
./redis-trib.rb check 10.10.64.41:7000

#dbsize
./redis-trib.rb call 10.10.64.41:7000 dbsize


#키 초기화
./redis-trib.rb call 10.10.64.41:7000 flushall


./redis-trib.rb info 10.10.64.41:7000





#
./redis-cli -c -h 10.10.64.41 -p 7000

set foo bar


set hello world

get foo

get hello

keys *



############################################
# 참고 사이트
############################################

#REDIS MASTER/SLAVE와 센티널 (2015년 5월, redis 3.0 버전)
http://crystalcube.co.kr/176?category=665742

#redis 옵션정보(2017년 2월)
http://jamcode.tistory.com/25

#redis 천만번 째 오류 발생 사례
http://yongho1037.tistory.com/699

#redis 설정(2017년 12월)
http://bstar36.tistory.com/349

#설정
https://lahuman.github.io/redis-cluster-install/
















